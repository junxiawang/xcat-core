
### Localization
d-i debian-installer/locale string en_US
d-i localechooser/supported-locales multiselect en_US.UTF-8

# Keyboard Selection
d-i console-setup/ask_detect boolean false
d-i keyboard-configuration/layoutcode string en



# Use the following settings if you wish to make use of the network-console
# component for remote installation over SSH. This only makes sense if you
# intend to perform the remainder of the installation manually.
#UNCOMMENONXCATDEBUGMODE#  d-i anna/choose_modules string network-console
#d-i network-console/authorized_keys_url string http://10.0.0.1/openssh-key
#UNCOMMENONXCATDEBUGMODE# d-i network-console/password password cluster
#UNCOMMENONXCATDEBUGMODE# d-i network-console/password-again password cluster



### Network Configuration

d-i netcfg/get_hostname string unassigned-hostname
d-i netcfg/get_domain string unassigned-domain
d-i netcfg/wireless_wep string
d-i netcfg/dhcp_timeout string 120
### Mirror settings
# If you select ftp, the mirror/country string does not need to be set.

#MIRRORSPEC#

# Suite to install.
#d-i mirror/suite string testing
# Suite to use for loading installer components (optional).
#d-i mirror/udeb/suite string testing
 

# Use the following option to add additional boot parameters for the
# installed system (if supported by the bootloader installer).
# Note: options passed to the installer will be added automatically.
d-i debian-installer/add-kernel-opts string #XCATVAR:PERSKCMDLINE#

### Partitioning
# This creates a small /boot partition, suitable
# swap, and uses the rest of the space for the root partition:

d-i partman-auto/method string regular
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true

#create the /tmp/partitionfile based on the uefi or legacy bios 
d-i partman/early_command string \
    set -x; \
    if [ -f /tmp/boot_disk ]; then \
       debconf-set partman-auto/disk "$(cat /tmp/boot_disk)"; \
       exit; \
    fi; \
    rm /tmp/devs-with-boot 2>/dev/null || true; \
    for d in $(list-devices partition); do \
        mkdir -p /tmp/mymount; \
        rc=0; \
        mount $d /tmp/mymount || rc=$?; \
        if [[ $rc -eq 0 ]]; then \
            [[ -d /tmp/mymount/boot ]] && echo $d >>/tmp/devs-with-boot; \
            for i in /tmp/mymount/vmlinuz* ; do \
                if [ -e $i ]; then \
                    echo $d >>/tmp/devs-with-boot; break; \
                fi; \
            done; \
            umount /tmp/mymount; \
        fi; \
    done; \
    if [[ -e /tmp/devs-with-boot ]]; then \
        head -n1 /tmp/devs-with-boot | egrep  -o '\S+[^0-9]' > /tmp/boot_disk; \
        rm /tmp/devs-with-boot 2>/dev/null || true; \
    else \
        if [[ -e /tmp/disk_info ]]; then \
            rm -f /tmp/disk_info; \
        fi; \
        for disk in $(list-devices disk); do \
            diskbootable=''; \
            currdriver=`udevadm info -a -n $disk |grep DRIVERS|grep -v '""'|grep -v '"sd"'|head -n 1|sed -e 's/[^"]*"//' -e 's/"//'`; \
            case "$currdriver" in \
            "ata_piix4"|"PMC MaxRAID"|"ahci"|"megaraid_sas") \
                diskbootable=$disk; \
            ;; \
            "mptsas"|"mpt2sas"|"mpt3sas") \
                diskbootable=$disk; \
            ;; \
            *) \
                diskbootable=''; \
            ;; \
            esac; \
            if [ ! -z "$diskbootable" ]; then \
                devpath=`udevadm info $diskbootable | grep DEVPATH`; \
                echo $devpath ." $diskbootable" >> /tmp/disk_info; \
            fi; \
        done; \
        if [[ -e /tmp/disk_info ]]; then \
            DEV=`cat /tmp/disk_info | sort -t : -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -g | head -n1 | egrep -o '/dev/[s|h|v]d.*$'`; \
        fi; \
        if [[ "$DEV" == "" ]]; then \
            DEV="/dev/sda"; \
        fi; \
        echo "$DEV" > /tmp/boot_disk; \
    fi; \
    debconf-set partman-auto/disk "$(cat /tmp/boot_disk)"
d-i partman-auto/expert_recipe_file string /tmp/partitionfile

# This makes partman automatically partition without confirmation, provided
# that you told it what to do using one of the methods above.

d-i partman/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

#XCA_PARTMAN_ADDITIONAL_CFG#

### Account setup 

d-i passwd/root-login boolean true
d-i passwd/make-user boolean false

d-i passwd/root-password-crypted password #CRYPT:passwd:key=system,username=root:password#

### Clock and time zone setup

d-i clock-setup/ntp boolean true
d-i clock-setup/ntp-server string #TABLE:site:key=master:value#
d-i clock-setup/utc boolean true
d-i time/zone string #TABLE:site:key=timezone:value#

### Apt setup

d-i apt-setup/multiverse boolean false
d-i apt-setup/universe boolean false
d-i apt-setup/backports boolean false
d-i apt-setup/updates boolean false


### Boot loader installation

d-i grub-installer/only_debian boolean true

### Package selection

tasksel tasksel/first multiselect standard

# gawk required for the xCAT scripts to work
# Otherwise it installs mawk, which doesn't work

d-i pkgsel/include string #INCLUDE_DEFAULT_PKGLIST_PRESEED#

d-i debian-installer/allow_unauthenticated boolean true
d-i pkgsel/update-policy select none
d-i pkgsel/updatedb boolean false

### Finishing up the installation
d-i finish-install/reboot_in_progress note

### X configuration
xserver-xorg xserver-xorg/autodetect_monitor boolean true

xserver-xorg xserver-xorg/config/monitor/selection-method \
  select medium

xserver-xorg xserver-xorg/config/monitor/mode-list \
  select 1024x768 @ 60 Hz


# To workaround the "Unmount partitions that are in use?" question,
# run the "umount /media" after the preseed is read in
d-i preseed/early_command string wget http://`cat /tmp/xcatserver`/install/autoinst/#HOSTNAME#.pre; \
     chmod u+x #HOSTNAME#.pre; \
     ./#HOSTNAME#.pre; \
     umount /media || true

d-i preseed/late_command string wget http://`cat /tmp/xcatserver`/install/autoinst/#HOSTNAME#.post; \
     chmod u+x #HOSTNAME#.post; \
     cp ./#HOSTNAME#.post /target/root/post.script; \
     mount -o bind /proc /target/proc -t proc; \
     mount -o bind /dev /target/dev; \
     mount -o bind /dev/pts /target/dev/pts -t devpts; \
     mount -o bind /sys /target/sys; \
     chroot /target /root/post.script; \
     cp /target/etc/network/interfaces /etc/network/interfaces

